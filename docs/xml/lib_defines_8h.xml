<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lib_defines_8h" kind="file" language="C++">
    <compoundname>libDefines.h</compoundname>
    <includes refid="_stack_8h" local="yes">Stack.h</includes>
    <includes refid="to__rpn_8h" local="yes">to_rpn.h</includes>
    <includedby refid="diagnostic_8c" local="yes">src/diagnostic.c</includedby>
    <includedby refid="to__rpn_8h" local="yes">src/to_rpn.h</includedby>
    <includedby refid="_test_8c" local="yes">src/Test.c</includedby>
    <incdepgraph>
      <node id="30">
        <label>src/libDefines.h</label>
        <link refid="lib_defines_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>stdlib.h</label>
      </node>
      <node id="35">
        <label>to_rpn.h</label>
        <link refid="to__rpn_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>Config.h</label>
        <link refid="_config_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>Consts.h</label>
        <link refid="_consts_8h"/>
      </node>
      <node id="31">
        <label>Stack.h</label>
        <link refid="_stack_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="36">
        <label>src/libDefines.h</label>
        <link refid="lib_defines_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>src/to_rpn.h</label>
        <link refid="to__rpn_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>src/Test.c</label>
        <link refid="_test_8c"/>
      </node>
      <node id="37">
        <label>src/diagnostic.c</label>
        <link refid="diagnostic_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="lib_defines_8h_1a62ac01f9ebfcec6ee7ca834185e1866f" prot="public" static="no">
        <name>LIB_VER</name>
        <initializer>20170609</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copyright (c) 2017 Matheus Silva </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libDefines.h" line="7" column="11" bodyfile="src/libDefines.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lib_defines_8h_1a1d98caa4cfb1350f4e7def4f31a09f81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_stack_8h_1aa7883e8bf747b9dedec990b539df2cc0" kindref="member">Stack</ref></type>
        <definition>Stack to_rpn</definition>
        <argsstring>(char **raw)</argsstring>
        <name>to_rpn</name>
        <param>
          <type>char **</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libDefines.h" line="9" column="1" bodyfile="src/to_rpn.h" bodystart="29" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="lib_defines_8h_1aebdb418b70e964383b7b0e2fbedde09e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stack_init</definition>
        <argsstring>(Stack *stack, int size)</argsstring>
        <name>stack_init</name>
        <param>
          <type><ref refid="_stack_8h_1aa7883e8bf747b9dedec990b539df2cc0" kindref="member">Stack</ref> *</type>
          <declname>stack</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialises the stack with a given size <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para>the stack to initialise </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>size to initialise the stack with </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libDefines.h" line="11" column="1" bodyfile="src/Stack.h" bodystart="28" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="lib_defines_8h_1afc04d6c48f275815a5a248a37b9f30bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stack_free</definition>
        <argsstring>(Stack *stack)</argsstring>
        <name>stack_free</name>
        <param>
          <type><ref refid="_stack_8h_1aa7883e8bf747b9dedec990b539df2cc0" kindref="member">Stack</ref> *</type>
          <declname>stack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libDefines.h" line="13" column="1" bodyfile="src/Stack.h" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="lib_defines_8h_1a4eb835db0240f79f7b5c29dbee04a5f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stack_resize</definition>
        <argsstring>(Stack *stack, int qty)</argsstring>
        <name>stack_resize</name>
        <param>
          <type><ref refid="_stack_8h_1aa7883e8bf747b9dedec990b539df2cc0" kindref="member">Stack</ref> *</type>
          <declname>stack</declname>
        </param>
        <param>
          <type>int</type>
          <declname>qty</declname>
          <defname>size</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libDefines.h" line="15" column="1" bodyfile="src/Stack.h" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="lib_defines_8h_1ae041e1222c96f70d7b1a4528c3b3bf2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stack_push</definition>
        <argsstring>(Stack *stack, int data)</argsstring>
        <name>stack_push</name>
        <param>
          <type><ref refid="_stack_8h_1aa7883e8bf747b9dedec990b539df2cc0" kindref="member">Stack</ref> *</type>
          <declname>stack</declname>
        </param>
        <param>
          <type>int</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libDefines.h" line="17" column="1" bodyfile="src/Stack.h" bodystart="64" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="lib_defines_8h_1a86914bce7c52639297c92a086ba87581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int stack_pop</definition>
        <argsstring>(Stack *stack)</argsstring>
        <name>stack_pop</name>
        <param>
          <type><ref refid="_stack_8h_1aa7883e8bf747b9dedec990b539df2cc0" kindref="member">Stack</ref> *</type>
          <declname>stack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libDefines.h" line="19" column="1" bodyfile="src/Stack.h" bodystart="79" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="lib_defines_8h_1ac5b24a79f9821527a6673b7582ae838b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int stack_check</definition>
        <argsstring>(Stack *stack)</argsstring>
        <name>stack_check</name>
        <param>
          <type><ref refid="_stack_8h_1aa7883e8bf747b9dedec990b539df2cc0" kindref="member">Stack</ref> *</type>
          <declname>stack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libDefines.h" line="21" column="1" bodyfile="src/Stack.h" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="lib_defines_8h_1a1f99bec6acb65ce01f2079dc1ea2c117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getsizeof_stack</definition>
        <argsstring>(Stack *stack)</argsstring>
        <name>getsizeof_stack</name>
        <param>
          <type><ref refid="_stack_8h_1aa7883e8bf747b9dedec990b539df2cc0" kindref="member">Stack</ref> *</type>
          <declname>stack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the size of the stack </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libDefines.h" line="23" column="1" bodyfile="src/Stack.h" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="lib_defines_8h_1ac631668285b65b180672342a757df994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stack_merge</definition>
        <argsstring>(Stack *stack1, Stack *stack2)</argsstring>
        <name>stack_merge</name>
        <param>
          <type><ref refid="_stack_8h_1aa7883e8bf747b9dedec990b539df2cc0" kindref="member">Stack</ref> *</type>
          <declname>stack1</declname>
        </param>
        <param>
          <type><ref refid="_stack_8h_1aa7883e8bf747b9dedec990b539df2cc0" kindref="member">Stack</ref> *</type>
          <declname>stack2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack1</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stack2</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libDefines.h" line="25" column="1" bodyfile="src/Stack.h" bodystart="113" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="5"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_stack_8h" kindref="compound">Stack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="to__rpn_8h" kindref="compound">to_rpn.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="lib_defines_8h_1a62ac01f9ebfcec6ee7ca834185e1866f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIB_VER<sp/>20170609</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="structstack" kindref="compound">Stack</ref><sp/><ref refid="lib_defines_8h_1a1d98caa4cfb1350f4e7def4f31a09f81" kindref="member">to_rpn</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**raw);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_defines_8h_1aebdb418b70e964383b7b0e2fbedde09e" kindref="member">stack_init</ref>(<ref refid="structstack" kindref="compound">Stack</ref><sp/>*<ref refid="structstack" kindref="compound">stack</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structvector_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_defines_8h_1afc04d6c48f275815a5a248a37b9f30bc" kindref="member">stack_free</ref>(<ref refid="structstack" kindref="compound">Stack</ref><sp/>*<ref refid="structstack" kindref="compound">stack</ref>);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_defines_8h_1a4eb835db0240f79f7b5c29dbee04a5f5" kindref="member">stack_resize</ref>(<ref refid="structstack" kindref="compound">Stack</ref><sp/>*<ref refid="structstack" kindref="compound">stack</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>qty);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_defines_8h_1ae041e1222c96f70d7b1a4528c3b3bf2c" kindref="member">stack_push</ref>(<ref refid="structstack" kindref="compound">Stack</ref><sp/>*<ref refid="structstack" kindref="compound">stack</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structvector_1ac103627c1ad15cbec2f22d0abe6d54b6" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_defines_8h_1a86914bce7c52639297c92a086ba87581" kindref="member">stack_pop</ref>(<ref refid="structstack" kindref="compound">Stack</ref><sp/>*<ref refid="structstack" kindref="compound">stack</ref>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_defines_8h_1ac5b24a79f9821527a6673b7582ae838b" kindref="member">stack_check</ref>(<ref refid="structstack" kindref="compound">Stack</ref><sp/>*<ref refid="structstack" kindref="compound">stack</ref>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_defines_8h_1a1f99bec6acb65ce01f2079dc1ea2c117" kindref="member">getsizeof_stack</ref>(<ref refid="structstack" kindref="compound">Stack</ref><sp/>*<ref refid="structstack" kindref="compound">stack</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_defines_8h_1ac631668285b65b180672342a757df994" kindref="member">stack_merge</ref>(<ref refid="structstack" kindref="compound">Stack</ref><sp/>*stack1,<sp/><ref refid="structstack" kindref="compound">Stack</ref><sp/>*stack2);</highlight></codeline>
    </programlisting>
    <location file="src/libDefines.h"/>
  </compounddef>
</doxygen>
