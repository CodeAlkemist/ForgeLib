<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="struct_stack" kind="struct" language="C++" prot="public">
    <compoundname>Stack</compoundname>
    <includes refid="_stack_8h" local="no">Stack.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_stack_1a439227feff9d7f55384e8780cfc2eb82" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/Stack.h" line="15" column="1" bodyfile="src/include/Stack.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_stack_1adbe66a087ac3fd4a5b0566f64ca2d12b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int capacity</definition>
        <argsstring></argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/Stack.h" line="16" column="1" bodyfile="src/include/Stack.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_stack_1ac103627c1ad15cbec2f22d0abe6d54b6" prot="public" static="no" mutable="no">
        <type>int *</type>
        <definition>int* data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/Stack.h" line="17" column="1" bodyfile="src/include/Stack.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Copyright (c) 2017 Matheus Silva <ref refid="struct_stack" kindref="compound">Stack</ref> data-type with the two stack operations push and pop, plus a stack_get_arbitrary operation to get the value at an arbitrary position on the stack </para>    </detaileddescription>
    <location file="src/include/Stack.h" line="14" column="1" bodyfile="src/include/Stack.h" bodystart="13" bodyend="18"/>
    <listofallmembers>
      <member refid="struct_stack_1adbe66a087ac3fd4a5b0566f64ca2d12b" prot="public" virt="non-virtual"><scope>Stack</scope><name>capacity</name></member>
      <member refid="struct_stack_1ac103627c1ad15cbec2f22d0abe6d54b6" prot="public" virt="non-virtual"><scope>Stack</scope><name>data</name></member>
      <member refid="struct_stack_1a439227feff9d7f55384e8780cfc2eb82" prot="public" virt="non-virtual"><scope>Stack</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
